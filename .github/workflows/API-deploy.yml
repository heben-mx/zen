name: API Deploy

on:
  push:
    paths:
      - "back/**"      
    branches: [ "main" ]
  pull_request:
    paths:
      - "back/**" 
    branches: [ "main" ]

  release:
    types: [published]

env:
  AWS_REGION: us-east-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECS_SERVICE: API                 # set this to your Amazon ECS service name
  ECS_CLUSTER: Zen                # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: task-definition.json # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: zen-API

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: back
          push: true
          tags: fredude/zen-api:latest

  deploy:
    name: Deploy
    needs: push_to_registry
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get task id
        id: task-id
        run: | 
          echo "::set-output name=id::$(aws ecs list-tasks --cluster Zen --service API --output text --query taskArns[0])"

      - name: Deploy Amazon ECS task definition
        run: aws ecs stop-task --cluster Zen --task ${{ steps.task-id.outputs.id }}
